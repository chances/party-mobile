# Change these secrets for production use!
#
# For encrytion keys, try CodeIgniter Encryption Keys:
# http://randomkeygen.com
#
# Tunage integrates with Auth0 for authorization.
# See https://auth0.com/docs/architecture-scenarios/mobile-api

# Auth0 Domain
AUTH_ZERO_DOMAIN=https://YOUR_DOMAIN.auth0.com
# Auth0 Client ID
AUTH_ZERO_CLIENT_ID=bogus_client_id

# At home, you'll have to add a Custom Social Connection for Spotify.
# See https://auth0.com/docs/connections/social/oauth2
#
# You'll also need to add a Rule to forward Spotify's access tokens:
# See https://auth0.com/docs/dashboard/guides/rules/create-rules
#
# For example:
# ```javascript
# function spotifyAccessToken(user, context, callback) {
#   console.log('Rule: Spotify Access Token');
#   const spotify_identity = user.identities.find(id => id.connection.startsWith('Spotify'));
#   if (spotify_identity === undefined) {
#     return callback(null, user, context);
#   }
# 
#   // Forward along Spotify tokens, appending to the user's claims (ID Tokens)
#   // See https://auth0.com/docs/tokens/concepts/id-tokens
#   const namespace = 'https://A_FQDN_YOU_OWN/auth/';
#   
#   console.log(JSON.stringify(spotify_identity));
#   
#   if (spotify_identity.access_token === undefined) {
#     return callback(null, user, context);
#   } else {
#     context.idToken[namespace + 'spotify/access_token'] = spotify_identity.access_token;
#   }
#   
#   if (spotify_identity.refresh_token !== undefined) {
#     context.idToken[namespace + 'spotify/refresh_token'] = spotify_identity.refresh_token;
#   }
#   
#   if (spotify_identity.expires_in !== undefined) {
#     context.idToken[namespace + 'spotify/expires_in'] = spotify_identity.expires_in;
#   }
# 
#   return callback(null, user, context);
# }
# ```
